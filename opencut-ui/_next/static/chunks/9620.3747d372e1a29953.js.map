{"version":3,"file":"static/chunks/9620.3747d372e1a29953.js","mappings":"+RAYA,OACA,CACA,OACA,QACA,WACA,CAAK,CACL,6BACA,CAAG,CACH,CACA,OACA,QACA,SACA,WACA,CAAK,CACL,kCACA,CAAG,CACH,CACA,OACA,QACA,OACA,WACA,CAAK,CACL,2BACA,CAAG,CACH,CACA,OACA,OACA,CAAK,CACL,wCACA,CAAG,CACH,CACA,OACA,OACA,CAAK,CACL,4CACA,CAAG,CACH,CACA,OACA,OACA,CAAK,CACL,gDACA,CAAG,CACH,CACA,OACA,OACA,CAAK,CACL,mDACA,CAAG,CACH,CACA,OACA,OACA,CAAK,CACL,oDACA,CAAG,CACH,CACA,OACA,QACA,OACA,CAAK,CACL,8BACA,CAAG,CACH,CACA,OACA,QACA,OACA,CAAK,CACL,8BACA,CAAG,CACH,CACA,OACA,QACA,OACA,CAAK,CACL,0CACA,CAAG,CACH,CACA,OACA,QACA,OACA,CAAK,CACL,oCACA,CAAG,CAEH,CACA,OACA,QACA,MACA,CAAK,CACL,gCACA,8BACA,CAAG,CACH,CACA,OACA,QACA,OACA,QACA,CAAK,CACL,gCACA,8BACA,CAAG,CAEH,CACA,OACA,QACA,MACA,CAAK,CACL,gCACA,8BACA,CAAG,CACH,CACA,OACA,QACA,MACA,CAAK,CACL,iCACA,8BACA,CAAG,CACH,CACA,OACA,OACA,CAAK,CACL,iCACA,8BACA,CAAG,CACH,CACA,OACA,OACA,CAAK,CACL,4CACA,8BACA,CAAG,CACH,CACA,OACA,QACA,MACA,CAAK,CACL,sDACA,8BACA,CAAG,CACH,CACA,OACA,QACA,OACA,CAAK,CACL,oDACA,8BACA,CAAG,CACH,CACA,OACA,QACA,OACA,CAAK,CACL,kDACA,8BACA,CAAG,CACH,CACA,OACA,QACA,OACA,CAAK,CACL,wDACA,CAAG,CACH,CACA,OACA,OACA,CAAK,CACL,qCACA,CAAG,CACH,CACA,OACA,QACA,QACA,QACA,CAAK,CACL,yCACA,CAAG,CACH,CACA,OACA,QACA,MACA,CAAK,CACL,sCACA,CAAG,CACH,CACA,OACA,QACA,SACA,OACA,CAAK,CACL,iDACA,CAAG,CACH,CACA,OACA,YACA,CAAK,CACL,oCACA,EACA,CAyEA,GACA,MACA,YACA,EACA,EAAoC,QAAe,EACnD,yBACA,OACA,WAAgB,CAChB,YAAkB,wBAClB,CAAG,CACH,SACA,MAAyB,QAAQ,mCACjC,cACa,QAAS,GAAI,QAAkB,cACnC,SAAS,KAAQ,QAAkB,CAAC,IAAQ,MAAQ,QAAU,iBACtD,QAAS,GAAI,QAAkB,CAAC,IAAQ,EAAI,MAAY,EAC7D,QAAW,CAAC,QAAK,CAAC,GAAG,GACjC,wCACA,CAAa,EACb,QAAuB,QAAO,MACd,QAAe,CAAC,QAAe,OAC/C,EACA,GACA,CAAa,oBACb,oBAAqD,QAAS,GAAI,QAAkB,gBAA+B,QAAkB,QACrI,OACS,MACT,EAEA,CACA,CAAC,EACD,GAAqB,yCACrB,YACA,GAAqB,OACrB,GAAqB,uCACrB,EAAkC,QAAe,EACjD,yBACA,SACA,MAAoB,QAAG,EACvB,QAAgB,mBAAsB,IAAe,UACrD,CAAK,EACL,EAA4B,QAAkB,GAC9C,EAlHA,MACA,MAA0B,QAAkB,GAC5C,EAAuB,QAAe,GACtC,EAAuB,OAAe,GACtC,EAAsB,OAAc,GA6DpC,OACA,eA7DA,kBACA,MAAqB,IAAY,cACjC,gBACA,OAEA,0BACA,sIACA,OAEA,yBACA,0CACA,wDACA,uBACA,OAGA,mBACA,6BACA,MACA,CACA,sCAGA,kBAEA,aADA,0CAGA,YADA,uDACA,CACA,uBACA,KACA,CAEA,0DACA,CACA,EA4BA,wBA3BA,KACA,eACA,2BAA+C,IAAc,IAE7D,EAwBA,wBAvBA,WAEA,aADA,wCAEA,sBAA0C,IAAc,KAGxD,aADA,sCAEA,wBAA4C,IAAc,IAE1D,EAeA,uBAdA,iBACA,YACA,+BACA,uCAEA,YACA,iCACA,2CAEA,CAMA,EACA,IA4CA,EAAyB,QAAe,GACxC,GAAY,GAAI,CAAE,OAAO,GACzB,EAAyB,QAAQ,KACjC,mCACA,QACA,QACA,YAAsB,QAAgB,OAAa,QACnD,aAEA,4CACA,gBACA,CAAO,GAEP,EAAgC,QAAG,OACnC,EAA8B,QAAG,KACjC,EAA+B,QAAG,OAClC,EAAkC,QAAG,OACrC,EAA4B,QAAG,OAC/B,EAAsC,QAAQ,MAC9C,cACA,UAGA,uEACA,QACA,GAGA,SAPA,KAUA,wBACA,CAAK,EACL,cACA,UACA,6CACA,UACA,CASA,oBACA,eACA,gCACA,iCAEA,CACA,oBACA,kDACA,cACA,aACA,IACA,MACA,aACA,UACA,MACA,CAGA,QADuB,IAAY,aAEnC,CACA,aACA,WACA,aACA,YACA,CACA,mBACA,kBACA,4BACA,IAAc,IAAc,EAC5B,qBACA,cACW,IAGX,iCAGA,GACA,CACA,oBACA,kCACA,iCAEA,aACA,0DAAoE,KAAe,EAGnF,CAvDI,QAAW,MACf,SACA,gBACA,OACA,oDACA,CAAS,KAET,CAAK,EAiDL,MAAkB,OAAQ,GAC1B,mBACA,wBACA,iCACA,OACA,gBACA,eACA,+BACA,QACA,CAAO,CACP,CACA,cACA,MAAiC,QAAgB,YACjD,MAAa,QAAS,GAAI,QAAW,CAAC,IAAW,EACjD,mBACA,wBACA,CAAO,EACP,OAAgB,QAAO,MACb,QAAW,CAAC,IAAS,EAC/B,gCACA,6DACA,6CACA,CAAW,sCACX,EACA,QAAiB,QAAO,MACxB,MACA,OACY,QAAW,CAAC,QAAK,CAAC,GAAS,GACvC,kBACA,+CACA,cACA,sCACA,gBACA,0BACA,kBACA,IACA,aACA,CAAe,CACf,uCACA,CAAa,EACb,QAAuB,QAAO,MACd,QAAW,CAAC,QAAK,CAAC,GAAM,GACxC,gBACA,SACA,CAAiB,EACjB,KAAwB,QAAO,KACX,QAAkB,UAChB,QAAW,CAAC,QAAK,CAAC,GAAM,GAC9C,oBACA,sBACA,oBACA,CAAuB,qBACD,QAAW,CAAC,QAAK,CAAC,GAAM,GAC9C,oBACA,oCACA,UAAmC,QAAK,2CACxC,oBACA,CAAuB,gCACD,QAAW,CAAC,QAAK,CAAC,GAAM,GAC9C,mBACA,sCACA,4BACA,oBACA,CAAuB,gCACvB,EACA,EACA,GACA,CAAiB,EACD,QAAW,CAAC,QAAK,CAAC,GAAM,GACxC,WACA,yBACA,YACA,+BACA,CAAiB,EACjB,KAAwB,QAAO,KACX,QAAkB,QACtC,wDACA,gBACqB,CAAE,QAAe,oBACtC,EACA,GACA,CAAiB,eACD,QAAW,CAAC,QAAK,CAAC,GAAM,GACxC,mBACA,2BACA,CAAiB,EACjB,KAAwB,QAAO,KAC/B,mBAAiD,QAAS,GAAI,QAAW,IACzE,MACA,oCACA,cAAqC,QAAK,0CAC1C,CAAqB,uCAA6C,QAAS,GAAI,QAAkB,gBACjG,EACA,GACA,CAAiB,eACD,QAAW,CAAC,QAAK,CAAC,GAAM,GACxC,eACA,uBACA,CAAiB,EACjB,KAAwB,QAAO,KACX,QAAkB,UAAqB,QAAe,wBAC1E,EACA,GACA,CAAiB,eACjB,EACA,GACA,CAAa,oCACD,QAAW,CAAC,QAAK,CAAC,GAAM,GACpC,gBACA,6CACA,iBACA,SACA,wCACA,QACA,CAAa,EACb,OAAsB,QAAO,MACb,QAAW,CAAC,QAAK,CAAC,GAAM,GACxC,iCACA,0CACA,+BACA,aACA,SACA,CAAiB,qCACjB,EACA,QAAuB,QAAO,MAC9B,MACA,OACkB,QAAkB,aAChB,QAAW,CAAC,QAAK,CAAC,GAAS,GAC/C,0BACA,MACA,yBACA,0DACA,yCACA,mBACA,SACA,UAAiC,QAAa,sBAC9C,CAAqB,yBACrB,SAAuD,QAAS,GAAI,QAAW,CAAC,QAAK,CAAC,GAAO,GAC7F,MACA,eACA,CAAqB,EACrB,QAA+B,QAAO,MACd,QAAe,CAAC,QAAe,2CAC/B,QAAW,CAAC,QAAK,CAAC,GAAG,GAC7C,qBACA,wBACyB,mBACzB,EACA,GACA,EAAqB,EAAK,QAAkB,QAC5C,EACA,CACe,EACf,GACA,CAAa,yBACD,QAAc,CAAC,QAAW,CAAC,QAAK,CAAC,GAAM,GACnD,aACA,yBACA,oBACA,kBACA,SACA,QACA,SACA,CAAa,oBACb,yCACA,EACA,CACS,EACT,GACA,CAAO,CACP,CACA,CACA,CAAC,EACD,EAAwC,OAAW","sources":["webpack://_N_E/../../node_modules/.bun/@comfyorg+comfyui-frontend@.+comfyorg-comfyui-frontend-1.26.2.tgz+af8430f8c26f463e/node_modules/@comfyorg/comfyui-frontend/lib/KeybindingPanel-XWhZMRZT.js"],"sourcesContent":["import { defineComponent, computed, openBlock, createElementBlock, Fragment, renderList, createVNode, unref, withCtx, createTextVNode, toDisplayString, createCommentVNode, ref, watchEffect, resolveDirective, createBlock, createElementVNode, withModifiers, withDirectives } from \"vue\";\nimport { FilterMatchMode } from \"@primevue/core/api\";\nimport Button from \"primevue/button\";\nimport Column from \"primevue/column\";\nimport DataTable from \"primevue/datatable\";\nimport Dialog from \"primevue/dialog\";\nimport InputText from \"primevue/inputtext\";\nimport Message from \"primevue/message\";\nimport Tag from \"primevue/tag\";\nimport { useToast } from \"primevue/usetoast\";\nimport { useI18n } from \"vue-i18n\";\nimport { ag as useKeybindingStore, ah as useCommandStore, P as useSettingStore, Q as useDialogStore, ai as KeyComboImpl, aj as KeybindingImpl, ak as normalizeI18nKey, a7 as _sfc_main$2, al as SearchBox, _ as _export_sfc } from \"./lib-index-DdMUP0fe.js\";\nconst CORE_KEYBINDINGS = [\n  {\n    combo: {\n      ctrl: true,\n      key: \"Enter\"\n    },\n    commandId: \"Comfy.QueuePrompt\"\n  },\n  {\n    combo: {\n      ctrl: true,\n      shift: true,\n      key: \"Enter\"\n    },\n    commandId: \"Comfy.QueuePromptFront\"\n  },\n  {\n    combo: {\n      ctrl: true,\n      alt: true,\n      key: \"Enter\"\n    },\n    commandId: \"Comfy.Interrupt\"\n  },\n  {\n    combo: {\n      key: \"r\"\n    },\n    commandId: \"Comfy.RefreshNodeDefinitions\"\n  },\n  {\n    combo: {\n      key: \"q\"\n    },\n    commandId: \"Workspace.ToggleSidebarTab.queue\"\n  },\n  {\n    combo: {\n      key: \"w\"\n    },\n    commandId: \"Workspace.ToggleSidebarTab.workflows\"\n  },\n  {\n    combo: {\n      key: \"n\"\n    },\n    commandId: \"Workspace.ToggleSidebarTab.node-library\"\n  },\n  {\n    combo: {\n      key: \"m\"\n    },\n    commandId: \"Workspace.ToggleSidebarTab.model-library\"\n  },\n  {\n    combo: {\n      key: \"s\",\n      ctrl: true\n    },\n    commandId: \"Comfy.SaveWorkflow\"\n  },\n  {\n    combo: {\n      key: \"o\",\n      ctrl: true\n    },\n    commandId: \"Comfy.OpenWorkflow\"\n  },\n  {\n    combo: {\n      key: \"g\",\n      ctrl: true\n    },\n    commandId: \"Comfy.Graph.GroupSelectedNodes\"\n  },\n  {\n    combo: {\n      key: \",\",\n      ctrl: true\n    },\n    commandId: \"Comfy.ShowSettingsDialog\"\n  },\n  // For '=' both holding shift and not holding shift\n  {\n    combo: {\n      key: \"=\",\n      alt: true\n    },\n    commandId: \"Comfy.Canvas.ZoomIn\",\n    targetElementId: \"graph-canvas\"\n  },\n  {\n    combo: {\n      key: \"+\",\n      alt: true,\n      shift: true\n    },\n    commandId: \"Comfy.Canvas.ZoomIn\",\n    targetElementId: \"graph-canvas\"\n  },\n  // For number pad '+'\n  {\n    combo: {\n      key: \"+\",\n      alt: true\n    },\n    commandId: \"Comfy.Canvas.ZoomIn\",\n    targetElementId: \"graph-canvas\"\n  },\n  {\n    combo: {\n      key: \"-\",\n      alt: true\n    },\n    commandId: \"Comfy.Canvas.ZoomOut\",\n    targetElementId: \"graph-canvas\"\n  },\n  {\n    combo: {\n      key: \".\"\n    },\n    commandId: \"Comfy.Canvas.FitView\",\n    targetElementId: \"graph-canvas\"\n  },\n  {\n    combo: {\n      key: \"p\"\n    },\n    commandId: \"Comfy.Canvas.ToggleSelected.Pin\",\n    targetElementId: \"graph-canvas\"\n  },\n  {\n    combo: {\n      key: \"c\",\n      alt: true\n    },\n    commandId: \"Comfy.Canvas.ToggleSelectedNodes.Collapse\",\n    targetElementId: \"graph-canvas\"\n  },\n  {\n    combo: {\n      key: \"b\",\n      ctrl: true\n    },\n    commandId: \"Comfy.Canvas.ToggleSelectedNodes.Bypass\",\n    targetElementId: \"graph-canvas\"\n  },\n  {\n    combo: {\n      key: \"m\",\n      ctrl: true\n    },\n    commandId: \"Comfy.Canvas.ToggleSelectedNodes.Mute\",\n    targetElementId: \"graph-canvas\"\n  },\n  {\n    combo: {\n      key: \"`\",\n      ctrl: true\n    },\n    commandId: \"Workspace.ToggleBottomPanelTab.logs-terminal\"\n  },\n  {\n    combo: {\n      key: \"f\"\n    },\n    commandId: \"Workspace.ToggleFocusMode\"\n  },\n  {\n    combo: {\n      key: \"e\",\n      ctrl: true,\n      shift: true\n    },\n    commandId: \"Comfy.Graph.ConvertToSubgraph\"\n  },\n  {\n    combo: {\n      key: \"m\",\n      alt: true\n    },\n    commandId: \"Comfy.Canvas.ToggleMinimap\"\n  },\n  {\n    combo: {\n      ctrl: true,\n      shift: true,\n      key: \"k\"\n    },\n    commandId: \"Workspace.ToggleBottomPanel.Shortcuts\"\n  },\n  {\n    combo: {\n      key: \"Escape\"\n    },\n    commandId: \"Comfy.Graph.ExitSubgraph\"\n  }\n];\nconst useKeybindingService = () => {\n  const keybindingStore = useKeybindingStore();\n  const commandStore = useCommandStore();\n  const settingStore = useSettingStore();\n  const dialogStore = useDialogStore();\n  const keybindHandler = async function(event) {\n    const keyCombo = KeyComboImpl.fromEvent(event);\n    if (keyCombo.isModifier) {\n      return;\n    }\n    const target = event.composedPath()[0];\n    if (keyCombo.isReservedByTextInput && (target.tagName === \"TEXTAREA\" || target.tagName === \"INPUT\" || target.tagName === \"SPAN\" && target.classList.contains(\"property_value\"))) {\n      return;\n    }\n    const keybinding = keybindingStore.getKeybinding(keyCombo);\n    if (keybinding && keybinding.targetElementId !== \"graph-canvas\") {\n      if (event.key === \"Escape\" && !event.ctrlKey && !event.altKey && !event.metaKey) {\n        if (dialogStore.dialogStack.length > 0) {\n          return;\n        }\n      }\n      event.preventDefault();\n      await commandStore.execute(keybinding.commandId);\n      return;\n    }\n    if (event.ctrlKey || event.altKey || event.metaKey) {\n      return;\n    }\n    if (event.key === \"Escape\") {\n      const modals = document.querySelectorAll(\".comfy-modal\");\n      for (const modal of modals) {\n        const modalDisplay = window.getComputedStyle(modal).getPropertyValue(\"display\");\n        if (modalDisplay !== \"none\") {\n          modal.style.display = \"none\";\n          break;\n        }\n      }\n      for (const d of document.querySelectorAll(\"dialog\")) d.close();\n    }\n  };\n  const registerCoreKeybindings = () => {\n    for (const keybinding of CORE_KEYBINDINGS) {\n      keybindingStore.addDefaultKeybinding(new KeybindingImpl(keybinding));\n    }\n  };\n  function registerUserKeybindings() {\n    const unsetBindings = settingStore.get(\"Comfy.Keybinding.UnsetBindings\");\n    for (const keybinding of unsetBindings) {\n      keybindingStore.unsetKeybinding(new KeybindingImpl(keybinding));\n    }\n    const newBindings = settingStore.get(\"Comfy.Keybinding.NewBindings\");\n    for (const keybinding of newBindings) {\n      keybindingStore.addUserKeybinding(new KeybindingImpl(keybinding));\n    }\n  }\n  async function persistUserKeybindings() {\n    await settingStore.set(\n      \"Comfy.Keybinding.NewBindings\",\n      Object.values(keybindingStore.getUserKeybindings())\n    );\n    await settingStore.set(\n      \"Comfy.Keybinding.UnsetBindings\",\n      Object.values(keybindingStore.getUserUnsetKeybindings())\n    );\n  }\n  return {\n    keybindHandler,\n    registerCoreKeybindings,\n    registerUserKeybindings,\n    persistUserKeybindings\n  };\n};\nconst _hoisted_1$1 = {\n  key: 0,\n  class: \"px-2\"\n};\nconst _sfc_main$1 = /* @__PURE__ */ defineComponent({\n  __name: \"KeyComboDisplay\",\n  props: {\n    keyCombo: {},\n    isModified: { type: Boolean, default: false }\n  },\n  setup(__props) {\n    const keySequences = computed(() => __props.keyCombo.getKeySequences());\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"span\", null, [\n        (openBlock(true), createElementBlock(Fragment, null, renderList(keySequences.value, (sequence, index) => {\n          return openBlock(), createElementBlock(Fragment, { key: index }, [\n            createVNode(unref(Tag), {\n              severity: _ctx.isModified ? \"info\" : \"secondary\"\n            }, {\n              default: withCtx(() => [\n                createTextVNode(toDisplayString(sequence), 1)\n              ]),\n              _: 2\n            }, 1032, [\"severity\"]),\n            index < keySequences.value.length - 1 ? (openBlock(), createElementBlock(\"span\", _hoisted_1$1, \"+\")) : createCommentVNode(\"\", true)\n          ], 64);\n        }), 128))\n      ]);\n    };\n  }\n});\nconst _hoisted_1 = { class: \"actions invisible flex flex-row\" };\nconst _hoisted_2 = [\"title\"];\nconst _hoisted_3 = { key: 1 };\nconst _hoisted_4 = { class: \"overflow-hidden text-ellipsis\" };\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  __name: \"KeybindingPanel\",\n  setup(__props) {\n    const filters = ref({\n      global: { value: \"\", matchMode: FilterMatchMode.CONTAINS }\n    });\n    const keybindingStore = useKeybindingStore();\n    const keybindingService = useKeybindingService();\n    const commandStore = useCommandStore();\n    const { t } = useI18n();\n    const commandsData = computed(() => {\n      return Object.values(commandStore.commands).map((command) => ({\n        id: command.id,\n        label: t(\n          `commands.${normalizeI18nKey(command.id)}.label`,\n          command.label ?? \"\"\n        ),\n        keybinding: keybindingStore.getKeybindingByCommandId(command.id),\n        source: command.source\n      }));\n    });\n    const selectedCommandData = ref(null);\n    const editDialogVisible = ref(false);\n    const newBindingKeyCombo = ref(null);\n    const currentEditingCommand = ref(null);\n    const keybindingInput = ref(null);\n    const existingKeybindingOnCombo = computed(() => {\n      var _a, _b;\n      if (!currentEditingCommand.value) {\n        return null;\n      }\n      if ((_b = (_a = currentEditingCommand.value.keybinding) == null ? void 0 : _a.combo) == null ? void 0 : _b.equals(\n        newBindingKeyCombo.value\n      )) {\n        return null;\n      }\n      if (!newBindingKeyCombo.value) {\n        return null;\n      }\n      return keybindingStore.getKeybinding(newBindingKeyCombo.value);\n    });\n    function editKeybinding(commandData) {\n      currentEditingCommand.value = commandData;\n      newBindingKeyCombo.value = commandData.keybinding ? commandData.keybinding.combo : null;\n      editDialogVisible.value = true;\n    }\n    watchEffect(() => {\n      if (editDialogVisible.value) {\n        setTimeout(() => {\n          var _a, _b;\n          (_b = (_a = keybindingInput.value) == null ? void 0 : _a.$el) == null ? void 0 : _b.focus();\n        }, 300);\n      }\n    });\n    async function removeKeybinding(commandData) {\n      if (commandData.keybinding) {\n        keybindingStore.unsetKeybinding(commandData.keybinding);\n        await keybindingService.persistUserKeybindings();\n      }\n    }\n    async function captureKeybinding(event) {\n      if (!event.shiftKey && !event.altKey && !event.ctrlKey && !event.metaKey) {\n        switch (event.key) {\n          case \"Escape\":\n            cancelEdit();\n            return;\n          case \"Enter\":\n            await saveKeybinding();\n            return;\n        }\n      }\n      const keyCombo = KeyComboImpl.fromEvent(event);\n      newBindingKeyCombo.value = keyCombo;\n    }\n    function cancelEdit() {\n      editDialogVisible.value = false;\n      currentEditingCommand.value = null;\n      newBindingKeyCombo.value = null;\n    }\n    async function saveKeybinding() {\n      if (currentEditingCommand.value && newBindingKeyCombo.value) {\n        const updated = keybindingStore.updateKeybindingOnCommand(\n          new KeybindingImpl({\n            commandId: currentEditingCommand.value.id,\n            combo: newBindingKeyCombo.value\n          })\n        );\n        if (updated) {\n          await keybindingService.persistUserKeybindings();\n        }\n      }\n      cancelEdit();\n    }\n    async function resetKeybinding(commandData) {\n      if (keybindingStore.resetKeybindingForCommand(commandData.id)) {\n        await keybindingService.persistUserKeybindings();\n      } else {\n        console.warn(\n          `No changes made when resetting keybinding for command: ${commandData.id}`\n        );\n      }\n    }\n    const toast = useToast();\n    async function resetAllKeybindings() {\n      keybindingStore.resetAllKeybindings();\n      await keybindingService.persistUserKeybindings();\n      toast.add({\n        severity: \"info\",\n        summary: \"Info\",\n        detail: \"All keybindings reset\",\n        life: 3e3\n      });\n    }\n    return (_ctx, _cache) => {\n      const _directive_tooltip = resolveDirective(\"tooltip\");\n      return openBlock(), createBlock(_sfc_main$2, {\n        value: \"Keybinding\",\n        class: \"keybinding-panel\"\n      }, {\n        header: withCtx(() => [\n          createVNode(SearchBox, {\n            modelValue: filters.value[\"global\"].value,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event) => filters.value[\"global\"].value = $event),\n            placeholder: _ctx.$t(\"g.searchKeybindings\") + \"...\"\n          }, null, 8, [\"modelValue\", \"placeholder\"])\n        ]),\n        default: withCtx(() => {\n          var _a;\n          return [\n            createVNode(unref(DataTable), {\n              selection: selectedCommandData.value,\n              \"onUpdate:selection\": _cache[1] || (_cache[1] = ($event) => selectedCommandData.value = $event),\n              value: commandsData.value,\n              \"global-filter-fields\": [\"id\", \"label\"],\n              filters: filters.value,\n              \"selection-mode\": \"single\",\n              \"striped-rows\": \"\",\n              pt: {\n                header: \"px-0\"\n              },\n              onRowDblclick: _cache[2] || (_cache[2] = ($event) => editKeybinding($event.data))\n            }, {\n              default: withCtx(() => [\n                createVNode(unref(Column), {\n                  field: \"actions\",\n                  header: \"\"\n                }, {\n                  body: withCtx((slotProps) => [\n                    createElementVNode(\"div\", _hoisted_1, [\n                      createVNode(unref(Button), {\n                        icon: \"pi pi-pencil\",\n                        class: \"p-button-text\",\n                        onClick: ($event) => editKeybinding(slotProps.data)\n                      }, null, 8, [\"onClick\"]),\n                      createVNode(unref(Button), {\n                        icon: \"pi pi-replay\",\n                        class: \"p-button-text p-button-warn\",\n                        disabled: !unref(keybindingStore).isCommandKeybindingModified(slotProps.data.id),\n                        onClick: ($event) => resetKeybinding(slotProps.data)\n                      }, null, 8, [\"disabled\", \"onClick\"]),\n                      createVNode(unref(Button), {\n                        icon: \"pi pi-trash\",\n                        class: \"p-button-text p-button-danger\",\n                        disabled: !slotProps.data.keybinding,\n                        onClick: ($event) => removeKeybinding(slotProps.data)\n                      }, null, 8, [\"disabled\", \"onClick\"])\n                    ])\n                  ]),\n                  _: 1\n                }),\n                createVNode(unref(Column), {\n                  field: \"id\",\n                  header: _ctx.$t(\"g.command\"),\n                  sortable: \"\",\n                  class: \"max-w-64 2xl:max-w-full\"\n                }, {\n                  body: withCtx((slotProps) => [\n                    createElementVNode(\"div\", {\n                      class: \"overflow-hidden text-ellipsis whitespace-nowrap\",\n                      title: slotProps.data.id\n                    }, toDisplayString(slotProps.data.label), 9, _hoisted_2)\n                  ]),\n                  _: 1\n                }, 8, [\"header\"]),\n                createVNode(unref(Column), {\n                  field: \"keybinding\",\n                  header: _ctx.$t(\"g.keybinding\")\n                }, {\n                  body: withCtx((slotProps) => [\n                    slotProps.data.keybinding ? (openBlock(), createBlock(_sfc_main$1, {\n                      key: 0,\n                      \"key-combo\": slotProps.data.keybinding.combo,\n                      \"is-modified\": unref(keybindingStore).isCommandKeybindingModified(slotProps.data.id)\n                    }, null, 8, [\"key-combo\", \"is-modified\"])) : (openBlock(), createElementBlock(\"span\", _hoisted_3, \"-\"))\n                  ]),\n                  _: 1\n                }, 8, [\"header\"]),\n                createVNode(unref(Column), {\n                  field: \"source\",\n                  header: _ctx.$t(\"g.source\")\n                }, {\n                  body: withCtx((slotProps) => [\n                    createElementVNode(\"span\", _hoisted_4, toDisplayString(slotProps.data.source || \"-\"), 1)\n                  ]),\n                  _: 1\n                }, 8, [\"header\"])\n              ]),\n              _: 1\n            }, 8, [\"selection\", \"value\", \"filters\"]),\n            createVNode(unref(Dialog), {\n              visible: editDialogVisible.value,\n              \"onUpdate:visible\": _cache[3] || (_cache[3] = ($event) => editDialogVisible.value = $event),\n              class: \"min-w-96\",\n              modal: \"\",\n              header: (_a = currentEditingCommand.value) == null ? void 0 : _a.label,\n              onHide: cancelEdit\n            }, {\n              footer: withCtx(() => [\n                createVNode(unref(Button), {\n                  label: existingKeybindingOnCombo.value ? \"Overwrite\" : \"Save\",\n                  icon: existingKeybindingOnCombo.value ? \"pi pi-pencil\" : \"pi pi-check\",\n                  severity: existingKeybindingOnCombo.value ? \"warn\" : void 0,\n                  autofocus: \"\",\n                  onClick: saveKeybinding\n                }, null, 8, [\"label\", \"icon\", \"severity\"])\n              ]),\n              default: withCtx(() => {\n                var _a2;\n                return [\n                  createElementVNode(\"div\", null, [\n                    createVNode(unref(InputText), {\n                      ref_key: \"keybindingInput\",\n                      ref: keybindingInput,\n                      class: \"mb-2 text-center\",\n                      \"model-value\": ((_a2 = newBindingKeyCombo.value) == null ? void 0 : _a2.toString()) ?? \"\",\n                      placeholder: \"Press keys for new binding\",\n                      autocomplete: \"off\",\n                      fluid: \"\",\n                      onKeydown: withModifiers(captureKeybinding, [\"stop\", \"prevent\"])\n                    }, null, 8, [\"model-value\"]),\n                    existingKeybindingOnCombo.value ? (openBlock(), createBlock(unref(Message), {\n                      key: 0,\n                      severity: \"warn\"\n                    }, {\n                      default: withCtx(() => [\n                        createTextVNode(toDisplayString(_ctx.$t(\"g.keybindingAlreadyExists\")) + \" \", 1),\n                        createVNode(unref(Tag), {\n                          severity: \"secondary\",\n                          value: existingKeybindingOnCombo.value.commandId\n                        }, null, 8, [\"value\"])\n                      ]),\n                      _: 1\n                    })) : createCommentVNode(\"\", true)\n                  ])\n                ];\n              }),\n              _: 1\n            }, 8, [\"visible\", \"header\"]),\n            withDirectives(createVNode(unref(Button), {\n              class: \"mt-4\",\n              label: _ctx.$t(\"g.resetAll\"),\n              icon: \"pi pi-replay\",\n              severity: \"danger\",\n              fluid: \"\",\n              text: \"\",\n              onClick: resetAllKeybindings\n            }, null, 8, [\"label\"]), [\n              [_directive_tooltip, _ctx.$t(\"g.resetAllKeybindingsTooltip\")]\n            ])\n          ];\n        }),\n        _: 1\n      });\n    };\n  }\n});\nconst KeybindingPanel = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__scopeId\", \"data-v-ac8bbe49\"]]);\nexport {\n  KeybindingPanel as default\n};\n//# sourceMappingURL=KeybindingPanel-XWhZMRZT.js.map\n"],"names":[],"sourceRoot":"","ignoreList":[0]}